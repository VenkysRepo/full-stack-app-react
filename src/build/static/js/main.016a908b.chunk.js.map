{"version":3,"sources":["components/DeviceTile.js","pages/device-content.js","pages/ListerPage.js","components/ReviewForm.js","pages/DevicePage.js","components/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["DeviceTile","props","to","device","code","className","alt","name","height","widht","src","imgUrl","price","type","class","devices","description","ListerPage","map","key","ReviewForm","deviceCode","setDeviceData","useState","userName","setUserName","review","setReview","addReview","a","fetch","method","body","JSON","stringify","headers","result","console","log","json","id","value","onChange","event","target","rows","cols","onClick","DevicePage","match","params","mobileDetails","find","user","reviews","deviceData","useEffect","getData","reviewInfo","NavBar","exact","activeClassName","placeholder","aria-label","App","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.016a908b.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom'\n\nconst DeviceTile = (props) => (\n    <Link to={`/device/${props.device.code}`}>\n        <div className=\"text-center\">\n            <img alt={props.device.name} className=\"\" height=\"400\" widht=\"300\" src={props.device.imgUrl} />\n            <p className=\"my-3\">{props.device.name}</p>\n            <p>₹{props.device.price}</p>\n            <button type=\"button\" class=\"btn btn-primary\">Learn More</button>\n        </div>\n    </Link>\n);\nexport default DeviceTile;","const devices = [\n    {\n        name: 'Sony Xperia P',\n        code: 'SonyXperiaP',\n        price:25000,\n        imgUrl:'https://rukminim1.flixcart.com/image/832/832/mobile/z/z/h/sony-xperia-sp-original-imadzartrhxxjnuz.jpeg?q=70',\n        description: [\n            `Sony has rolled out an effective mid-range mobile with the Sony Experia P. The phone is an impressive smartphone from the Sony Experia stables and similar to its predecessors, comes in the form of a bar. The device is run on the well tested Android v2.3 OS, upgradable to v4.1 Jelly Bean, and can also be upgraded to the much vaunted v4.0 (Ice Cream Sandwich) OS. The Sony Xperia P possesses a 1 GHz U8500, Dual Core processor. These specifications are supported by a 1 GB RAM to assure the smooth running of the multiple apps on this device.\n\n            The rectangular screen of this Sony phone is a 4-inch TFT capacitive display, which gives a resolution of 960 x 540 pixels. The display also comes with WhiteMagic Technology, which is a feature that allows the user to discern what is displayed on the screen even in the afternoon sun and helps to conserve battery at other times. Additionally, the Mobile Bravia Engine aids the display quality to a fair extent. The User Interface used on this device is Android’s very own Timescape.\n            \n            The phone possesses a powerful 8 megapixel camera with an 8x digital zoom which will ensure excellent quality pictures. The secondary 0.3 megapixel camera allows the user to carry out video calls. The camera is accompanied with an LED flash. The camera features Face and Smile detection, Touch Focus, Image Stabilization, Red-eye Reduction and many more features that simplify the photography process. The Full HD recording feature on the device is capable of taking high definition 1080 x 1920 pixel video, at 30 fps, making the video shooting experience quite satisfying. The phone comes loaded with a geo-tagging feature that allows a user to obtain local information using the GPS function on the phone.\n            \n            Design\n            \n            The Sony Experia P has a good weight distribution and is easy to hold in the palm of the hand. The edges are sharp and straight in appearance. The phone weighs in at 120 g and is neither too light nor too heavy when held. The screen is scratch resistant and has a shatter proof sheet over the mineral glass. The display comes with an ambient light sensor which is an intelligent sensor that adjusts the display brightness according to the surrounding environment.\n            \n            Storage and Battery\n            \n            The Sony Experia P comes with a sufficient internal memory of 16 GB. The colossal processor requires an equally efficient battery. The device comes packed with a 1305 mAh, Li-Ion battery which takes care of the power requirements of the device. The battery promises to offer 6 hours of talktime when used on the 2G network and offers an equally adequate 5 hours when used on the 3G spectrum. The device offers up to 80 hours of music playback and 4 hours of video playback to keep you entertained when travelling or when you’re sitting in an extremely boring meeting. Headphones are advisable for the latter case.\n            \n            Connectivity and Features\n            \n            This Sony Experia will keep you connected in almost all the possible ways. Over the 2G network you can use GPRS and EDGE technology. For an optimized browsing experience the user can also connect to the internet via the 3G network. The device is capable of higher data transfer rates being HSDPA and HSUPA capable. That means the capacity of the phone to transfer data is enhanced compared to other 3G capable phones without this feature. This Sony phone is also WiFi capable when you are in a wireless network. The user can also transfer files and documents through Bluetooth or through the micro USB port. The device is capable of tethering to other mobiles through the USB and WiFi hotspot. Using the HDMI port on the device the user can connect and transfer audio or video data from this phone.\n            This Sony phone caters to the music lover with 3D Surround Sound and xCLOUD technology for an excellent music experience. Living up to being an all-round entertainment phone, the user can indulge in motion games like Asphalt and Tilt 3D or access the FM radio.\n            The device comes with social networking sites like Facebook and Twitter. Other apps such as Youtube, Google Talk with Video Chat, Google Latitude and the Android Market are bundled into this phone. Business features of the phone include Document Viewer, which allows the user to manage and access documents and presentations and Pushmail, which provides access to the user’s Email on the move.`,\n        ]\n    },    {\n        name: 'Apple iPhone 6S',\n        code: 'AppleiPhone6S',\n        price:40000,\n        imgUrl:'https://rukminim1.flixcart.com/image/832/832/j7qi9ow0/mobile/h/f/t/apple-iphone-6s-mn0x2hn-a-original-imaexw7fpbbfwwtw.jpeg?q=70',\n        description: [\n            `Apple iPhone 6s smartphone was launched in September 2015. The phone comes with a 4.70-inch touchscreen display with a resolution of 750x1334 pixels at a pixel density of 326 pixels per inch (ppi) and an aspect ratio of 16:9. Apple iPhone 6s is powered by a 1.84GHz dual-core Apple A9 processor. It comes with 2GB of RAM. The Apple iPhone 6s runs iOS 9 and is powered by a 1715mAh non-removable battery.\n\n            As far as the cameras are concerned, the Apple iPhone 6s on the rear packs a 12-megapixel camera with an f/2.2 aperture and a pixel size of 1.22-micron. The rear camera setup has phase detection autofocus. It sports a 5-megapixel camera on the front for selfies, with an f/2.2 aperture.\n            \n            Apple iPhone 6s based on iOS 9 and packs 16GB of inbuilt storage. The Apple iPhone 6s is a single SIM (GSM) smartphone that accepts a Nano-SIM card. The Apple iPhone 6s measures 138.30 x 67.10 x 7.10mm (height x width x thickness) and weighs 143.00 grams. It was launched in Gold, Rose Gold, Silver, and Space Grey colours. It bears a metal body.\n            \n            Connectivity options on the Apple iPhone 6s include Wi-Fi 802.11 a/b/g/n/ac, GPS, Bluetooth v4.20, NFC, Lightning, 3G, and 4G (with support for Band 40 used by some LTE networks in India). Sensors on the phone include accelerometer, ambient light sensor, barometer, compass/ magnetometer, gyroscope, proximity sensor, and fingerprint sensor.`,\n        ]\n    },     \n    {\n        name: 'Apple iPhone X',\n        code: 'AppleiPhoneX',\n        price:30000,\n        imgUrl:'https://rukminim1.flixcart.com/image/832/832/j9d3bm80/mobile/g/x/j/apple-iphone-x-mqa62hn-a-original-imaeyzyfdzhfckef.jpeg?q=70',\n        description: [\n            `iPad mini is beloved for its size and capability. And now there are even more reasons to love it. A12 Bionic chip with Neural Engine. A 7.9‑inch Retina display with True Tone. And Apple Pencil, so you can capture your biggest ideas wherever they come to you. It’s still iPad mini. There’s just more of it than ever.\n            `,\n        ]\n    },  \n    \n];\n\nexport default devices;","import React from 'react';\nimport DeviceTile from '../components/DeviceTile'\nimport devices from './device-content'\n\nconst ListerPage = () => (\n    <div className=\"text-center\">\n    <h1>Mobile Phones</h1> \n    <div className=\"d-flex flex-row justify-content-around\">\n    {devices.map((device,key) =>(\n        <DeviceTile key={key}\n        device={device}\n        /> \n    ))}\n    </div>\n     \n    </div>\n);\nexport default ListerPage;","import React, {useState} from 'react';\n\nconst ReviewForm = ({deviceCode,setDeviceData}) => {\n    const [userName, setUserName] = useState('');\n    const [review, setReview] = useState('');\n    const addReview = async () => {\n        const result = await fetch(`/api/devices/${deviceCode}/add-review`, {\n            method: 'post',\n            body: JSON.stringify({ userName, review: review }),\n            headers: {\n                'Content-Type': 'application/json',\n            }\n        })\n        console.log('name');\n        console.log(deviceCode);\n        const body = await result.json();\n        setDeviceData(body);\n        setUserName('');\n        setReview('');\n    }\n    return (\n        <>\n            <h6> Add a Review:</h6>\n            <div className=\"d-flex flex-column\">\n                <label>\n                    Name:\n                                </label>\n                <input type=\"text\" id=\"lname\" value={userName} onChange={(event) => setUserName(event.target.value)}/>\n                <label>\n                    Comment:\n                                </label>\n                <textarea rows=\"4\" cols=\"50\" value={review} onChange={(event) => setReview(event.target.value)}/>\n                <button type=\"button\" onClick={() => addReview()} className=\"btn btn-secondary my-3 width-fit-content\">Add</button>\n            </div>\n        </>\n    );\n}\n\nexport default ReviewForm;","import React, { useState, useEffect } from 'react';\nimport ReviewForm from '../components/ReviewForm';\nimport devices from './device-content'\n\nconst DevicePage = ({ match }) => {\n    const name = match.params.name;\n    const mobileDetails = devices.find(device => device.code === name)\n   //console.log(name);\n    const [deviceData, setDeviceData] = useState({ code : \"\", user: \"\", reviews: [] });\n\n\n    useEffect(() => {\n        const getData = async () => {\n            const result = await fetch(`/api/devices/${name}`);\n            const body = await result.json();\n            //console.log(body.reviews[0].review);\n            setDeviceData(body);\n        }\n        getData();\n    }, [name]);\n    return (\n        <>\n            <div className=\"container my-5\">\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-sm-4 col-xs-12\">\n                        <img alt={mobileDetails.name} className=\"\" height=\"400\" widht=\"300\" src={mobileDetails.imgUrl} />\n                    </div>\n\n                    {/* <section className=\"d-contents\">  */}\n                    <div className=\"col-md-8 col-sm-8 col-xs-12\">  \n                        <h6>Highlights:</h6>\n                            <ul className=\"\">\n                                <li className=\"\" >32 GB ROM</li>\n                                <li className=\"\" >11.94 cm (4.7 inch) Retina HD Display</li>\n                                <li className=\"\" >12MP Rear Camera | 5MP Front Camera</li>\n                                <li className=\"\" >Apple A9 64-bit processor and M9 Motion Co-processor</li>\n                            </ul> \n                        \n                        <div className=\"col-md-8 col-sm-8 col-xs-12\">\n                        <h6>Reviews:</h6>\n                            <ul className=\"\">\n                                {deviceData.reviews.map((reviewInfo, key) => (\n                                    <li >\n                                        {/* {reviewInfo.user} */}\n                                        {reviewInfo.review}\n                                    </li>\n                                ))}\n                            </ul>\n                        </div>\n                        <hr class=\"btm-border mx-3\"></hr> \n                        <div className=\"col-md-6 col-sm-6 col-xs-12\">\n                        <ReviewForm deviceCode={name} setDeviceData={setDeviceData}/>\n                        </div>\n                    </div>\n                    {/* </section> */}\n                    <hr></hr>\n                </div>\n            </div>\n\n        </>\n    );\n\n};\nexport default DevicePage;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst NavBar = () => { \nreturn (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light justify-content-between\">\n        <div class=\"collapse navbar-collapse justify-content-between\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav\">\n                <li  className=\"nav-item\">\n                    <NavLink exact activeClassName=\"active\" className=\"nav-link\" to=\"/\">Devices</NavLink>\n                </li>\n                <li className=\"nav-item\">\n                    <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/support\">Support</NavLink>\n                </li>\n            </ul>\n            <form className=\"form-inline\">\n                <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n                <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\n            </form>\n        </div>\n    </nav>\n);\n\n};\n\nexport default NavBar;","import React from 'react'; \nimport {\n  BrowserRouter as Router,\n  Route,\n} from 'react-router-dom';\nimport './App.css';\nimport ListerPage from './pages/ListerPage';\nimport DevicePage from './pages/DevicePage';\nimport NavBar from './components/NavBar';\n\nfunction App() {\n  return (\n    <Router>\n    <div className=\"App\">\n      <NavBar />\n      <Route path=\"/\" component={ListerPage} exact/>\n      <Route path=\"/device/:name\" component={DevicePage} exact/>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//import 'whatwg-fetch';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}